name: Deploy Pages

on:
  push:
    paths:
      - "src/cloudflared/cloudflared.version"
  workflow_dispatch:
  repository_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Pages
    steps:
      - name: Checkout private repo test
        uses: actions/checkout@v4
        with:
          repository: darkommoers/mainal
          path: mainal
          token: ${{ secrets.MY_GITHUB_TOKEN }}

      - name: Run a multi-line script
        run: |
          ls -al
          ls -al mainal
          cat mainal/cf/pages/wrangler.toml
          sed -i 's/compatibility_date = "[^"]*"/compatibility_date = "'$(date +"%Y-%m-%d")'"/' mainal/cf/pages/wrangler.toml
          cat mainal/cf/pages/wrangler.toml
          echo "MY_PROJECT_NAME=$(sed -n 's/^name = "\(.*\)"$/\1/p' mainal/cf/pages/wrangler.toml)" >> $GITHUB_ENV
          MY_PROJECT_NAME=$(sed -n 's/^name = "\(.*\)"$/\1/p' mainal/cf/pages/wrangler.toml)
          echo $MY_PROJECT_NAME
          echo "RESPONSE_SUCCESS=$(curl -s https://api.cloudflare.com/client/v4/accounts/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/pages/projects/$MY_PROJECT_NAME \
            -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -H "Content-Type: application/json" | jq -r '.success')" >> $GITHUB_ENV

      - name: Deploy Pages
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: "mainal/cf/pages"
          preCommands: |
            echo "*** pre commands ***"
            echo ${{ env.RESPONSE_SUCCESS }}
            [ "$RESPONSE_SUCCESS" = "false" ] && echo "Project not found, creating new project..." && npx wrangler pages project create $MY_PROJECT_NAME --production-branch main || echo "Project already exists, no action needed."
          postCommands: |
            echo "*** post commands ***"
          command: |
            pages project list
            pages deploy .
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Print wrangler command output
        env:
          CMD_OUTPUT: ${{ steps.deploy.outputs.command-output }}
          DEPLOYMENT_URL: ${{ steps.deploy.outputs.deployment-url }}
          DEPLOYMENT_ALIAS_URL: ${{ steps.deploy.outputs.pages-deployment-alias-url }}
        run: |
          echo $CMD_OUTPUT
          echo "*** ***"
          echo $DEPLOYMENT_URL
          echo "*** ***"
          echo $DEPLOYMENT_ALIAS_URL
          echo "command-output"
          echo "${{ steps.deploy.outputs.command-output }}"
          echo "command-stderr"
          echo "${{ steps.deploy.outputs.command-stderr }}"
          echo "deployment-url"
          echo "${{ steps.deploy.outputs.deployment-url }}"
          echo "pages-deployment-alias-url"
          echo "${{ steps.deploy.outputs.pages-deployment-alias-url }}"
          echo "pages-deployment-id"
          echo "${{ steps.deploy.outputs.pages-deployment-id }}"
          echo "pages-environment"
          echo "${{ steps.deploy.outputs.pages-environment }}"
