name: AutoCheck

on:
  schedule:
    - cron:  '04 4,16 * * *'
  workflow_dispatch:

jobs:
  autocheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Test Automatic check and push version
        env:
          # GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
          CONTENT_PATH: "src/haproxy/haproxy.version"
        run: |
          target_name="Haproxy"
          target_url="https://api.github.com/repos/haproxy/haproxy/tags"
          # current_version="$(cat "${CONTENT_PATH}" | head -1)"

          current_version="$(curl -fsSL -H "Authorization: Bearer ${GH_TOKEN}" -X GET https://api.github.com/repos/${{ github.repository }}/contents/${CONTENT_PATH} | jq -r .content | head -1 | openssl base64 -d)"

          # List repository tags use
          latest_version="$(curl -fsSL -H "Authorization: Bearer ${GH_TOKEN}" -X GET ${target_url} | jq -r .[0].name)"
          # List releases use
          # latest_version="$(curl -fsSL -H "Authorization: Bearer ${GH_TOKEN}" -X GET ${target_url} | jq -r .[0].tag_name)"

          echo "$(date '+%F %T') === Current $target_name version: $current_version"
          echo "$(date '+%F %T') === Latest ${target_name} version: ${latest_version}"
          if [[ "$current_version" != "${latest_version}" ]]; then
              echo "$(date '+%F %T') === Current version: $current_version, Latest version: ${latest_version}, Start Getting......"
              curl -L \
                  -X PUT \
                  -H "Authorization: Bearer ${GH_TOKEN}" \
                  https://api.github.com/repos/${{ github.repository }}/contents/${CONTENT_PATH} \
                  -d "{
                      \"message\":\"Update to ${latest_version}\",
                      \"content\":\"$(echo ${latest_version} | openssl base64 -A)\",
                      \"sha\":$(curl -fsSL -H "Authorization: Bearer ${GH_TOKEN}" -X GET https://api.github.com/repos/${{ github.repository }}/contents/${CONTENT_PATH} | jq .sha)
                      }" | jq -r .commit.message

              echo "$(date '+%F %T') === Get ${target_name} latest version Complete."
          else
              echo "$(date '+%F %T') === Current version: $current_version, Latest version: ${latest_version}, No need to get."
          fi
