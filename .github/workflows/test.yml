name: DemoTest

on:
  workflow_dispatch:

jobs:
  push:
    runs-on: windows-latest

    # defaults:
    #   run:
    #     shell: msys2 {0}

    steps:
      - run: git config --global core.autocrlf input
      - name: Checkout
        uses: actions/checkout@v4

      - name: get source
        shell: powershell
        run: |
          echo run
          $PSVersionTable.PSVersion.Major, (Get-Host).Version.Major, $Host.Version.Major | Get-Random
          # choco install sed -y
          perl --version
          sed --version
          # cd $env:ProgramFiles\Mercurial
          # .\hg version
          $metadataNginx = Invoke-RestMethod http://nginx.org/en/download.html
          $metadataNginx -match 'nginx/Windows-(.*?)<';$releaseNginx = $matches[1]
          Start-BitsTransfer -Source "http://nginx.org/download/nginx-${releaseNginx}.tar.gz" -Destination "nginx-${releaseNginx}.tar.gz" -Dynamic
          tar -zxf "nginx-${releaseNginx}.tar.gz"
          Remove-Item "nginx-${releaseNginx}.tar.gz" -Force -Recurse *>$null
          Move-Item ".\nginx-${releaseNginx}*" -Destination ".\nginx" -Force
          
          $clfileto="$Env:ProgramFiles\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\$((Get-ChildItem -Path "$Env:ProgramFiles\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\" -Recurse -Name cl.exe)[0])"
          $clfileto | foreach-object { "{0}`t{1}" -f $_.Name, [System.Diagnostics.FileVersionInfo]::GetVersionInfo($_).FileVersion } |% {$_ -match '\d{2}.\d{2}'};$clfilever=$Matches[0];$clfilever
          $newContent = switch -Wildcard -Regex -File .\nginx\auto\cc\msvc {
              'version:.*$' {
                  "NGX_MSVC_VER=${clfilever}"
                  $_
              }
              default { $_ }
          }
          $newContent | Set-Content .\nginx\auto\cc\msvc
          Get-Content .\nginx\auto\cc\msvc
          Get-Location
          echo end

      # - uses: msys2/setup-msys2@v2
      # - name: Configure Makefile
      #   shell: msys2 {0}
      #   run: |
      #     uname -a
      #     # cd nginx
      #     pwd
      #     ls -al

      # - name: Make
      #   shell: pwsh
      #   run: |
      #     perl --version
      #     sed --version
      #     cd $env:ProgramFiles\Mercurial
      #     .\hg version
