name: AutoCheck

on:
  workflow_dispatch:

jobs:
  autocheck:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
      CARGO_TERM_COLOR: always
    strategy:
      fail-fast: false
      matrix:
        target:
          - i686-unknown-linux-gnu
          # - i686-unknown-linux-musl
          # - x86_64-unknown-linux-gnu
          # - x86_64-unknown-linux-musl
          # - armv5te-unknown-linux-gnueabi
          # - armv5te-unknown-linux-musleabi
          # - arm-unknown-linux-gnueabi
          # - arm-unknown-linux-musleabi
          # - arm-unknown-linux-gnueabihf
          # - arm-unknown-linux-musleabihf
          # - armv7-unknown-linux-gnueabi
          # - armv7-unknown-linux-musleabi
          # - armv7-unknown-linux-gnueabihf
          # - armv7-unknown-linux-musleabihf
          # - aarch64-unknown-linux-gnu
          # - aarch64-unknown-linux-musl
          # - mips64el-unknown-linux-gnuabi64 # no work
          # - mips64el-unknown-linux-muslabi64
          # - powerpc64le-unknown-linux-gnu
          # - powerpc64le-unknown-linux-musl # no work
          # - riscv64gc-unknown-linux-gnu
          # - riscv64gc-unknown-linux-musl # no work
          # - s390x-unknown-linux-gnu
          # - s390x-unknown-linux-musl # no work
          # - i686-pc-windows-gnu
          # - i686-pc-windows-msvc
          # - x86_64-pc-windows-gnu
          # - x86_64-pc-windows-msvc
    steps:
      - name: Checkout self
        uses: actions/checkout@v4

      # - name: Checkout phantun repo
      #   uses: actions/checkout@v4
      #   with:
      #     repository: dndx/phantun

      - name: test
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # GH_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: |
          # gh help formatting
          # gh api repos/{owner}/{repo}/releases --jq '.'
          gh api repos/{owner}/{repo}/tags --jq '.'

      # - name: rustup target list
      #   run: rustup target list

      # - name: Install Rust
      #   run: |
      #     rustup set profile minimal
      #     rustup toolchain install stable
      #     rustup default stable
      #     rustup override set stable
      #     # rustup target add ${{ matrix.target }}
      #     # rustup target add --toolchain stable ${{ matrix.target }}

      # - name: Install cross
      #   run: |
      #     cargo install cross
      #     # cargo install cross --git https://github.com/cross-rs/cross

      # - name: Build ${{ matrix.target }}
      #   run: |
      #     git clone https://github.com/dndx/phantun.git
      #     # cp -fr phantun/* $PWD
      #     cp -fr phantun/* .
      #     ls -al
      #     cross build --release --target ${{ matrix.target }}
      #     # cargo build --release --target ${{ matrix.target }}

      # - name: Rename artifacts and compress
      #   run: |
      #     mkdir -p path/to/ready; install -d path/to/ready
      #     ls -al
      #     currrr=$PWD
      #     cd target/${{ matrix.target }}/release
      #     ls -al
      #     mv client phantun_client
      #     mv server phantun_server
      #     zip -9vr phantun_${{ matrix.target }}.zip phantun_client phantun_server
      #     cp -fr phantun_${{ matrix.target }}.zip $currrr/path/to/ready
      #     ls -lhR $currrr/path/to/ready

      # - name: Upload to GitHub Release for all platform
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     # GH_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      #   run: |
      #     # gh release create phantun ./path/to/ready/* -t "phantun Rolling Release" -n "These are automatically updated builds of the latest commit."
      #     gh release create phantun path/to/ready/* --title "phantun Rolling Release" --notes "These are automatically updated builds of the latest commit."

      # - name: Upload to GitHub Release for all platform
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     # GH_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      #   uses: ncipollo/release-action@v1
      #   with:
      #     name: phantun Rolling Release
      #     tag: phantun
      #     body: These are automatically updated builds of the latest commit.
      #     artifacts: "target/${{ matrix.target }}/release/*.zip"
      #     allowUpdates: true
      #     # token: ${{ secrets.GITHUB_TOKEN }}
      #     # token: ${{ secrets.MY_GITHUB_TOKEN }}
