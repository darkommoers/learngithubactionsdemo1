name: AutoCheck

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Variables
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # GH_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
          CONTENT_PATH: "src/wireguard/wireguard.version"
        shell: bash
        run: |
          # echo "WIREGUARD_VERSION=$(curl -fsSL -H "Authorization: Bearer ${GH_TOKEN}" -X GET https://api.github.com/repos/${{ github.repository }}/contents/${{ env.CONTENT_PATH }} | jq -r .content | head -1 | base64 -d)" >> $GITHUB_ENV
          echo "WIREGUARD_VERSION=$(cat "${{ env.CONTENT_PATH }}" | head -n1)" >> $GITHUB_ENV
          echo "$(cat "${{ env.CONTENT_PATH }}" | head -n1)"

      - name: Test push Docker image
        run: |
          # docker run --rm --privileged ${{ secrets.DOCKERHUB_USERNAME }}/wireguard:latest wg --help
          docker run --rm --privileged ${{ secrets.DOCKERHUB_USERNAME }}/wireguard:${{ env.WIREGUARD_VERSION }} wg-quick --help
          echo "$(cat "${{ env.CONTENT_PATH }}" | head -n1)"
          # docker run --rm --privileged ghcr.io/${{ github.actor }}/wireguard:latest wg --help
          # docker run --rm --privileged ghcr.io/${{ github.repository_owner }}/wireguard:${{ env.WIREGUARD_VERSION }} wg-quick --help

  # autocheck:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Delete workflow runs
  #       uses: Mattraks/delete-workflow-runs@main
  #       with:
  #         token: ${{ github.token }}
  #         repository: ${{ github.repository }}
  #         retain_days: 0
  #         keep_minimum_runs: 0

      # - run: mkdir -p path/to/artifact

      # - run: echo hello > path/to/artifact/world0.txt

      # - run: echo hello > path/to/artifact/world1.txt

      # - run: echo hello > path/to/artifact/world2.txt
      
      # - name: Delete old tag
      #   env:
      #     # GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     GH_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      #   run: |
      #     TARGET_TAG="release"
      #     curl -sL \
      #       -X DELETE \
      #       -H "Authorization: Bearer ${GH_TOKEN}" \
      #       https://api.github.com/repos/${{ github.repository }}/git/refs/tags/${TARGET_TAG}

      # - name: Upload to GitHub Release for all platform
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     name: Rolling Release
      #     tag_name: release
      #     body: These are automatically updated builds of the latest commit.
      #     files: "path/to/artifact/*"
      #     token: ${{ secrets.GITHUB_TOKEN }}
